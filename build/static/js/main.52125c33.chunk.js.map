{"version":3,"sources":["firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","useState","user","setUser","isSignIn","setSignIn","className","Fragment","onClick","signOut","email","signInWithEmailAndPassword","then","operation","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAcAA,IAASC,cAXc,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIZ,IAAMC,EAAOV,IAASU,OACJV,IAASW,YC0CnBC,MArDf,WAAe,MAWWC,mBAAS,IAXpB,mBAWNC,EAXM,KAWAC,EAXA,OAYiBF,oBAAS,GAZ1B,mBAYNG,EAZM,KAYIC,EAZJ,KAuCb,OACE,qBAAKC,UAAU,MAAf,SACIF,EACF,eAAC,IAAMG,SAAP,WACE,wBAAQC,QAfd,WACEV,EAAKW,UACLN,EAAQ,IACRE,GAAU,IAYN,8BACA,qDAAwBH,EAAKQ,YAG7B,wBAAQF,QAjCd,WAMEV,EAAKa,2BAA2B,sBAAuB,UACtDC,MAAK,SAAAC,GACJR,GAAU,GACVF,EAAQU,EAAUX,MAClBY,QAAQC,IAAIF,EAAUX,UAuBpB,kCCxCOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.52125c33.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBA_KEVb8kHAEqFJHQNyfloh9YecPLBSrs\",\n    authDomain: \"gs1-project-a2d2a.firebaseapp.com\",\n    databaseURL: \"https://gs1-project-a2d2a.firebaseio.com\",\n    projectId: \"gs1-project-a2d2a\",\n    storageBucket: \"gs1-project-a2d2a.appspot.com\",\n    messagingSenderId: \"145374141673\",\n    appId: \"1:145374141673:web:20a7755aa658ac6ec82478\",\n    measurementId: \"G-WJ2HRTQ56K\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();","\nimport { useState } from 'react';\nimport React from 'react'\nimport {auth} from './firebaseConfig';\n\nfunction App() {\n\n\n  /**\n   * Explica el hook de useState, la inicializacion y que se pueden usar varios estados en el componente,\n   * que es mejor que cada componente controle susestado y no un estado global.\n   * \n   * Explica tambien la destructuracion de objetos en Javascript o Typescript (obtener datos desde un array,\n   * porque al final el useState nos devuelve un array de 2 posiciones, primero con el estado y el metodo \n   * para actualizarse)\n   */\n  const [user, setUser] = useState([]);\n  const [isSignIn, setSignIn] = useState(false);\n\n  function login() {\n    /**\n     * Explica aqui que importas el auth y lo configuras en firebaseConfig.js, y el then es por lo de las promesas\n     * que es una funciona asincrona. Y cuando se cumple satisfactoriamente actualizas el estado. De esta\n     * forma se actualiza la vista.\n     */\n    auth.signInWithEmailAndPassword(\"magi61012@gmail.com\", \"123456\")\n    .then(operation => {\n      setSignIn(true);\n      setUser(operation.user);\n      console.log(operation.user);\n    })\n  }\n\n  function logout() {\n    auth.signOut();\n    setUser([]);\n    setSignIn(false);\n  }\n\n\n  /**\n   * Aqui que solo pueden devolver un componente, si no quieren usar un div, pues React.Fragment.\n   * El onClick y que para hacer un if tiene que ser con el ternario.\n   */\n  return (\n    <div className=\"App\">\n      { isSignIn ? \n      <React.Fragment>\n        <button onClick={logout}>Cerrar sesión</button> \n        <h2>Bienvenido a casa: {user.email}</h2>\n      </React.Fragment>\n      : \n        <button onClick={login}>Iniciar sesión</button>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}