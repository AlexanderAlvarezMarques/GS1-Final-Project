{"version":3,"sources":["firebaseConfig.js","componentes/SignUp.js","componentes/PagePrincipal.js","componentes/LogIn.js","componentes/Incidences.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignUp","history","useHistory","useState","nombre","apellido","dni","correo","contraseña","fechaCarnet","nacimiento","marca","modelo","matricula","userSignUp","signUp","error","actualizarError","actualizarState","e","target","name","value","vehiculo","datosPerfil","vehiculos","onSubmit","preventDefault","trim","createUserWithEmailAndPassword","then","user","db","userUID","currentUser","uid","collection","doc","set","console","log","push","catch","errorCode","code","errorMessage","message","type","onChange","PagePrincipal","to","LogIn","Incidences","onClick","window","location","href","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b46f5d.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nrequire('dotenv').config()\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DDBB_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore(); ","import React, { Fragment, useState } from 'react';\r\nimport { Router, useHistory} from 'react-router-dom';\r\nimport {auth, firestore} from '../firebaseConfig';\r\n\r\nconst SignUp = () => {\r\n    //para rediccionar\r\n    let history = useHistory();\r\n\r\n    // estado que tiene el usuario \r\n    const [userSignUp, signUp] = useState({\r\n        nombre : 'juanma',\r\n        apellido : 'perez',\r\n        dni : '12345678E',\r\n        correo : 'juanma@gmail.com',\r\n        contraseña : '123456',\r\n        fechaCarnet : '10/02/2019',\r\n        nacimiento : '5/02/1997',\r\n        marca : 'toyota',\r\n        modelo : 'yaris',\r\n        matricula : '1234FTG'\r\n    })\r\n    \r\n    // estado para validaciones\r\n    const [error, actualizarError] = useState(false);\r\n\r\n    // actualizar campos del formulario\r\n    const actualizarState = e => {\r\n        signUp({\r\n            ...userSignUp,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    //objeto que contiene todas las variables que necesitamos\r\n    const {nombre,apellido,dni,correo,fechaCarnet,contraseña,nacimiento,marca,modelo,matricula} = userSignUp;\r\n\r\n    \r\n    const vehiculo = {\r\n        marca,\r\n        modelo,\r\n        matricula\r\n    }\r\n\r\n    // const car = {\r\n    //     marca:[],\r\n    //     modelo:[],\r\n    //     matricula:[]\r\n    // }\r\n\r\n    const datosPerfil = {\r\n        nombre,\r\n        apellido,\r\n        dni,\r\n        correo,\r\n        fechaCarnet,\r\n        nacimiento,\r\n        contraseña,\r\n        vehiculos : [vehiculo.marca,vehiculo.modelo,vehiculo.matricula]\r\n    }\r\n\r\n\r\n    const registrar = e => {\r\n\r\n        e.preventDefault()\r\n\r\n        //validar que los campos no esten vacios\r\n        if ( nombre.trim() === '' || apellido.trim() === '' || dni.trim() === '' || correo.trim() === '' || contraseña.trim() === '' || fechaCarnet.trim() === '' || modelo.trim() === '' || nacimiento.trim() === '' || marca.trim() === '' || modelo.trim() === '' || matricula.trim() === ''){\r\n            actualizarError(true);\r\n            return;\r\n        }\r\n        actualizarError(false);\r\n        \r\n        //crear usuario nuevo y añadir a la base de datos\r\n        auth.createUserWithEmailAndPassword(correo, contraseña)\r\n        .then((user) => {\r\n            \r\n            var db = firestore;\r\n            var userUID = auth.currentUser.uid;\r\n            db.collection('bd').doc(userUID).set(datosPerfil)\r\n            \r\n            //db.collection('bd').doc(userUID).set(vehiculo);\r\n                .then(() => {\r\n                    console.log(\"Todo correcto\")\r\n                    \r\n                    history.push(\"/\");\r\n                }).catch((e) => {\r\n                console.log(\"hubo un error: \", e)\r\n            })\r\n            \r\n        })\r\n        .catch((error) => {\r\n            var errorCode = error.code;\r\n            console.log(errorCode);\r\n            var errorMessage = error.message;\r\n            console.log(errorMessage);\r\n        });\r\n    \r\n\r\n    }\r\n    \r\n    //HTML \r\nreturn( \r\n    <Fragment>\r\n        <h2>Sign In Form</h2>\r\n        { error ? <p>Todos los campos deben estar rellenos</p> : null }\r\n        <form\r\n            onSubmit={registrar}\r\n        >\r\n            <label>Nombre: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"nombre\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>Apellido: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"apellido\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>DNI: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"dni\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>Correo: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"correo\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>contraseña: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"contraseña\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>Nacimiento: </label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"nacimiento\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>Fecha Carnet: </label>\r\n            <input\r\n                type=\"date\"\r\n                name=\"fechaCarnet\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>Marca: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"marca\"\r\n                onChange={actualizarState}\r\n            />\r\n\r\n            <label>Submodel: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"modelo\"\r\n                onChange={actualizarState}\r\n            />\r\n            <label>Matricula: </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"matricula\"\r\n                onChange={actualizarState}\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n            >Registrarse</button>\r\n        </form>\r\n    </Fragment>\r\n);\r\n}\r\nexport default SignUp ;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PagePrincipal = () => ( \r\n    <Fragment>\r\n        <h1>Página Principal</h1> \r\n        <Link to={'/logIn'}>Iniciar sesión</Link> \r\n        <br></br>\r\n        <Link to={'/signUp'} >Crear cuenta</Link>\r\n        <br></br>\r\n        <Link to={'/Incidences'} >Incidencia</Link>\r\n    </Fragment>\r\n    \r\n);\r\nexport default PagePrincipal;","import React, { Fragment, useState } from \"react\";\r\nimport { Router, useHistory } from \"react-router-dom\";\r\nimport { auth, firestore } from \"../firebaseConfig\";\r\n\r\nconst LogIn = () => {\r\n  //para rediccionar\r\n  let history = useHistory();\r\n\r\n\r\n  //    HTML\r\n  return(\r\n      <Fragment>\r\n          <h2> Log In</h2>\r\n          <form>\r\n              <label>Nombre de usuario: </label>\r\n              <input type=\"text\" name=\"userName\"/>\r\n              <br></br>\r\n              <label>Contraseña</label>\r\n              <input type=\"password\" name=\"passwd\"/>\r\n          </form>\r\n\r\n      </Fragment>\r\n  )\r\n};\r\nexport default LogIn;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Incidences = () => {\r\n  const misIncidences = (e) => {\r\n    window.location.href = \"/newIncidence\";\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1>Mis incidencias</h1>\r\n      <label> AQUI IRIAN LAS INCIDENCIAS</label>\r\n      <br></br>\r\n      <button onClick={misIncidences}> Nueva reclamación</button>\r\n      <br></br>\r\n      <Link to={\"/logIn\"}>Volver</Link>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Incidences;","import { useState, Fragment } from 'react';\r\nimport React from 'react'\r\nimport {auth} from './firebaseConfig';\r\nimport SignUp from './componentes/SignUp';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport PagePrincipal from './componentes/PagePrincipal';\r\nimport LogIn from './componentes/LogIn';\r\nimport Incidences from './componentes/Incidences';\r\n\r\nfunction App() {\r\n\r\n\r\n  /**\r\n   * Explica el hook de useState, la inicializacion y que se pueden usar varios estados en el componente,\r\n   * que es mejor que cada componente controle susestado y no un estado global.\r\n   * \r\n   * Explica tambien la destructuracion de objetos en Javascript o Typescript (obtener datos desde un array,\r\n   * porque al final el useState nos devuelve un array de 2 posiciones, primero con el estado y el metodo \r\n   * para actualizarse)\r\n   */\r\n  const [user, setUser] = useState([]);\r\n  const [isSignIn, setSignIn] = useState(false);\r\n\r\n  function login() {\r\n    /**\r\n     * Explica aqui que importas el auth y lo configuras en firebaseConfig.js, y el then es por lo de las promesas\r\n     * que es una funciona asincrona. Y cuando se cumple satisfactoriamente actualizas el estado. De esta\r\n     * forma se actualiza la vista.\r\n     */\r\n    auth.signInWithEmailAndPassword(\"pepe@gmail.com\", \"elpepe\")\r\n    .then(operation => {\r\n      setSignIn(true);\r\n      setUser(operation.user);\r\n      console.log(operation.user);\r\n    })\r\n  }\r\n\r\n  function logout() {\r\n    auth.signOut();\r\n    setUser([]);\r\n    setSignIn(false);\r\n  }\r\n\r\n\r\n  /**\r\n   * Aqui que solo pueden devolver un componente, si no quieren usar un div, pues React.Fragment.\r\n   * El onClick y que para hacer un if tiene que ser con el ternario.\r\n   */\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={PagePrincipal}/>\r\n          <Route exact path=\"/signUp\" component={SignUp}/>\r\n          <Route exact path=\"/logIn\" component={LogIn}/>\r\n          <Route exact path=\"/Incidences\" component={Incidences}/>\r\n          {/* <Route exact path=\"/login\" component={Login}/> */}\r\n        </Switch>\r\n      </Router>\r\n      // {/* <SignIn/> */}\r\n      // {/* { isSignIn ? \r\n      // <React.Fragment>\r\n      //   <button onClick={logout}>Cerrar sesión</button> \r\n      //   <h2>Bienvenido a la aplicacion: {user.email}</h2>\r\n      // </React.Fragment>\r\n      // : \r\n      // <Fragment>\r\n      //     <button onClick={login}>Iniciar sesión</button>\r\n      //     <Link to={'/signIn'}>Crear cuenta</Link>\r\n      // </Fragment>\r\n        \r\n      // }       */}\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}