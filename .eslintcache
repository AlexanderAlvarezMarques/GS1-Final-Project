[{"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/reportWebVitals.js":"1","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/PagePrincipal.js":"2","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/PriceEstimate.js":"3","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Claims.js":"4","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Incidences.js":"5","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Spinner.js":"6","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Resumen.js":"7","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/PayTarjet.js":"8","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/index.js":"9","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/SignUp.js":"10","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/SesionPage.js":"11","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/UpdateProfile.js":"12","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/NewClaim.js":"13","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/Helper.js":"14","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Paypal.js":"15","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/NewIncidence.js":"16","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/App.js":"17","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/ContratarSeguro.js":"18","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Resultado.js":"19","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/LogIn.js":"20","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/DeleteAccount.js":"21"},{"size":362,"mtime":1607123775212,"results":"22","hashOfConfig":"23"},{"size":902,"mtime":1608138814640,"results":"24","hashOfConfig":"23"},{"size":5182,"mtime":1608066574250,"results":"25","hashOfConfig":"23"},{"size":518,"mtime":1608138814633,"results":"26","hashOfConfig":"23"},{"size":1514,"mtime":1608146469422,"results":"27","hashOfConfig":"23"},{"size":694,"mtime":1608066574257,"results":"28","hashOfConfig":"23"},{"size":670,"mtime":1608066574251,"results":"29","hashOfConfig":"23"},{"size":2368,"mtime":1608118361178,"results":"30","hashOfConfig":"23"},{"size":500,"mtime":1607127436378,"results":"31","hashOfConfig":"23"},{"size":5482,"mtime":1608119373794,"results":"32","hashOfConfig":"23"},{"size":352,"mtime":1608138814636,"results":"33","hashOfConfig":"23"},{"size":2535,"mtime":1608120290666,"results":"34","hashOfConfig":"23"},{"size":2201,"mtime":1608138814634,"results":"35","hashOfConfig":"23"},{"size":1503,"mtime":1608066574243,"results":"36","hashOfConfig":"23"},{"size":2000,"mtime":1608118210604,"results":"37","hashOfConfig":"23"},{"size":3305,"mtime":1608139209051,"results":"38","hashOfConfig":"23"},{"size":3823,"mtime":1608138814643,"results":"39","hashOfConfig":"23"},{"size":1946,"mtime":1608066574244,"results":"40","hashOfConfig":"23"},{"size":868,"mtime":1608066574250,"results":"41","hashOfConfig":"23"},{"size":2712,"mtime":1608144644486,"results":"42","hashOfConfig":"23"},{"size":1173,"mtime":1608066574245,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16lgyth",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/reportWebVitals.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/PagePrincipal.js",[],["98","99"],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/PriceEstimate.js",["100"],"import React, { useState } from 'react';\nimport {obtenerDiferenciaYear} from '../Helper'\nimport {calcularMarca} from '../Helper'\nimport {obtenerPlan} from '../Helper'\nimport {porAntiguedad} from '../Helper'\nimport Spinner from './Spinner'\nimport Resultado from './Resultado'\nimport Resumen from './Resumen'\nimport { Link } from 'react-router-dom';\n//import { Router, useHistory} from 'react-router-dom';\n//import {auth, firestore} from '../firebaseConfig';\n\nconst PriceEstimate = () => {\n\n    const [resumen, guardarResumen] = useState({\n        cotizacion: 0,\n        datos: {\n            marca : 'Ford',\n            modelo : 'Focus',\n            year : 1997,\n            antiguedadCarnet : 5,\n            plan : 'basico'\n        }\n      });\n\n    const [cargando, guardarCargando] = useState(false);\n    \n    const {cotizacion, datos} = resumen;\n\n    //state para los campos del formulario\n    const [data, setData] = useState({\n        marca : 'Ford',\n        modelo : 'Focus',\n        year : 1997,\n        antiguedadCarnet : 5,\n        plan : 'basico'\n    });\n\n    const {marca,modelo,year,antiguedadCarnet,plan} = data;\n    // estado para validaciones\n    const [error, actualizarError] = useState(false);\n\n    // actualizar campos del formulario\n    const actualizarState = e => {\n        setData({\n            ...data,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const getPriceEstimate = e =>{\n        e.preventDefault()\n        console.log(\"he apretado el boton\");\n\n        if( marca.trim() === '' || modelo.trim() === '' || year === null || antiguedadCarnet === null || plan.trim() === ''){\n            actualizarError(true);\n            return;\n        }\n            actualizarError(false);\n\n        \n            let resultado = 2000;\n            const diferencia = obtenerDiferenciaYear(year);\n            const antiguedad = porAntiguedad(antiguedadCarnet);\n            resultado-= ((diferencia*3)*resultado+antiguedad)/ 100;\n    \n            resultado = calcularMarca(marca) * resultado; \n\n\n            const incrementoPlan = obtenerPlan(plan);\n            resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n            console.log(resultado)\n            guardarCargando(true);\n    \n            setTimeout(()=>{\n    \n                guardarCargando(false);\n    \n                guardarResumen({\n                    cotizacion: Number(resultado),\n                    datos\n                });\n            },3000);\n            \n    }\n\n\n    return( \n        <>\n        <h1>Estimación de precio para tu coche</h1>\n\n        <form\n            onSubmit={getPriceEstimate}\n        >\n            <label>Marca</label>\n            <select\n                name=\"marca\"\n                value= {marca}\n                onChange={actualizarState}\n            >\n                <option value=\"\">-- Seleccione --</option>\n                <option value=\"Mercedes\">Mercedes</option>\n                <option value=\"Ford\">Ford</option>\n                <option value=\"Audi\">Audi</option>\n                <option value=\"Toyota\">Toyota</option>\n                <option value=\"Hyundai\">Hyundai</option>\n            </select>\n                \n            \n            <label>Modelo</label>\n            <select\n                name=\"modelo\"\n                value= {modelo}\n                onChange={actualizarState}\n            >\n                <option value=\"\">-- Seleccione --</option>\n                <option value=\"Berlina\">Berlina</option>\n                <option value=\"Focus\">Focus</option>\n                <option value=\"A3\">A3</option>\n                <option value=\"Yaris\">Yaris</option>\n                <option value=\"Tucson\">Tucson</option>\n            </select>\n\n            <label>Año matriculación</label>\n            <input\n                type=\"number\"\n                name=\"year\"\n                value={year}\n                onChange={actualizarState}\n            />\n\n            <label>Antiguedad de carnet</label>\n            <input\n                type=\"number\"\n                name=\"antiguedadCarnet\"\n                value={antiguedadCarnet}\n                onChange={actualizarState}\n            />\n            <div>\n                <label>Plan</label>\n                <input\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"basico\"\n                    checked={plan === \"basico\"}\n                    onChange={actualizarState}\n                /> \n                Básico\n\n                <input\n                    type=\"radio\"\n                    name=\"plan\"\n                    value=\"completo\"\n                    checked={plan === \"completo\"}\n                    onChange={actualizarState}\n                />\n                Completo\n            </div>\n            <button \n                type=\"submit\"\n            >Aceptar</button>\n        </form>\n        <div>\n        { cargando ? <Spinner/> : null }\n        \n        <Resumen datos={datos}/>\n         \n         { !cargando ? \n          <Resultado cotizacion={cotizacion}/>\n         : null }\n        </div>\n        <Link to={'/contratarSeguro'}>Contratar este Seguro</Link>\n       \n        </>\n    );\n}\nexport default PriceEstimate ;",["101","102"],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Claims.js",[],["103","104"],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Incidences.js",["105","106"],"import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Router, useHistory } from \"react-router-dom\";\nimport { auth, firestore } from \"../firebaseConfig\";\n\nconst Incidences = () => {\n  let history = useHistory();\n\n  const misIncidences = (e) => {\n    history.push(\"/NewIncidence\");\n  };\n\n  const list = document.querySelector(\"ul\");\n\n  const [inci,setInci]=useState([])\n\n  auth.onAuthStateChanged((user) => {\n    if (user) {\n      //var uid = user.uid;\n      var userUID = auth.currentUser.uid;\n\n      var docRef = firestore.collection(\"usuariosRgistrados\").doc(userUID);\n\n      docRef.get().then(function(doc) {\n          if (doc.exists) {\n              console.log(\"Document data:\", doc.data().incidencias);\n              setInci(\n                ...inci,\n                doc.data().incidencias)\n\n                console.log('data: ', inci);\n                \n              return;\n             \n          } else {\n              console.log(\"No such document!\");\n          }\n      }).catch(function(error) {\n          console.log(\"Error getting document:\", error);\n      });\n    }\n  });\n\n  \n\n  return (\n    <Fragment>\n      <h1>Mis incidencias</h1>\n      <label> AQUI IRIAN LAS INCIDENCIAS</label>\n      <br></br>\n\n      {[inci].map(i => (\n        <p>Incidencia: {i.issue}</p>\n\n      ))}\n      \n      <button onClick={misIncidences}> Nueva incidencia</button>\n      <br></br>\n      <Link to={\"/sesion\"}>Volver</Link>\n    </Fragment>\n  );\n};\nexport default Incidences;\n","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Spinner.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Resumen.js",[],["107","108"],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/PayTarjet.js",["109"],"import React, { useState }  from 'react';\nimport { auth, firestore } from '../firebaseConfig';\n\nconst PayTarjet = ({cotizacion}) => {\n    \n     //state para los campos del formulario\n     const [data, setData] = useState({\n        numeroTarjeta : '',\n        numeroSecreto : '',\n        fechaCaducidad : '',\n        \n    });\n\n    const pagoSeguro = {\n        precio: cotizacion,\n        fecha: new Date().getTime().toString(),\n    }\n\n    const {numeroSecreto,numeroTarjeta,fechaCaducidad} = data;\n    // estado para validaciones\n    const [error, actualizarError] = useState(false);\n\n    // actualizar campos del formulario\n    const actualizarState = e => {\n        setData({\n            ...data,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const Pagar = e => {\n        e.preventDefault()\n        console.log(\"pagar con tarjeta\");\n\n        if( numeroSecreto === null || numeroTarjeta === null || fechaCaducidad === null ){\n            actualizarError(true);\n            return;\n        }\n            actualizarError(false);\n\n        //realizar pago en la base de datos\n\n        if(auth.currentUser.uid != null ){\n            firestore.collection('usuariosRgistrados').doc(auth.currentUser.uid).update({\n                \"pagos\": [pagoSeguro]\n            }).then(() => {\n                console.info('se ha actualizado el pago');\n                \n              }).catch((e) => {\n                console.error('Mal', e);\n                \n              })\n        }else{\n            console.log('no hay usuario ');\n        }\n\n\n\n    }\n    \n    return( \n    <>\n    <h1>Pagar con tarjeta</h1>\n    <form\n        onSubmit={Pagar}\n    >\n        <label>Numero tarjeta</label>\n        <input\n            type=\"number\"\n            name=\"numeroTarjeta\"\n            value={numeroTarjeta}\n            onChange={actualizarState}\n        ></input>\n        \n        <label>Numero secreto</label>\n        <input\n            type=\"number\"\n            name=\"numeroSecreto\"\n            value={numeroSecreto}\n            onChange={actualizarState}\n        ></input>\n\n        <label>Fecha caducidad</label>\n        <input\n            type=\"number\"\n            name=\"fechaCaducidad\"\n            value={fechaCaducidad}\n            onChange={actualizarState}\n        ></input>\n        <button type=\"submit\">Pagar</button>\n    </form>\n    </>\n)};\nexport default PayTarjet ;","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/index.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/SignUp.js",["110","111"],"import React, { Fragment, useState } from 'react';\nimport { Router, useHistory} from 'react-router-dom';\nimport {auth, firestore} from '../firebaseConfig';\n\nconst db = firestore;\n\nconst SignUp = () => {\n\n    // para rediccionar\n    let history = useHistory();\n\n    // estado que tiene el usuario \n    const [user, setUser] = useState({\n        nombre : 'juanma',\n        apellido : 'perez',\n        dni : '12345678E',\n        correo : 'juanma@gmail.com',\n        contraseña : '123456',\n        telefono: '678678678',\n        fechaCarnet : '10/02/2019',\n        nacimiento : '5/02/1997',\n        vehiculos: [],\n        incidencias : [],\n        reclamaciones: [],\n        \n    })\n\n    //estado para el vehiculo\n    const [car, setCar] = useState({\n        marca: 'Toyota',\n        modelo: 'Yaris',\n        kilometros: 28000,\n        tipo: 'Turismo',\n        combustible: 'Gasolina',\n        matricula: '3844LLL',\n        pagos: []\n    })\n\n    // estado para validaciones\n    const [error, actualizarError] = useState(false);\n\n    // actualizar campos del formulario\n    const actualizarState = e => {\n        setUser({\n            ...user,\n            [e.target.name] : e.target.value\n        })\n        setCar({\n            ...car,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    //objeto que contiene todas las variables que necesitamos\n    const {nombre,apellido,dni,correo,fechaCarnet,contraseña,nacimiento,telefono} = user;\n    const {marca,modelo,kilometros,tipo,combustible,matricula} = car;\n\n\n    const checkEmptyValues = () => {\n        return nombre.trim() === '' || \n                apellido.trim() === '' || \n                dni.trim() === '' || \n                correo.trim() === '' || \n                contraseña.trim() === '' || \n                fechaCarnet.trim() === '' || \n                modelo.trim() === '' || \n                nacimiento.trim() === '' || \n                marca.trim() === '' || \n                modelo.trim() === '' || \n                matricula.trim() === '' ||\n                tipo.trim() === '' ||\n                kilometros === 0 ||\n                combustible.trim() === '' ||\n                telefono.trim() === ''\n\n    }\n\n    const registrar = e => {\n\n        e.preventDefault()\n\n        //validar que los campos no esten vacios\n        if (checkEmptyValues()){\n            actualizarError(true);\n            return;\n        }\n        actualizarError(false);\n        \n        //crear usuario nuevo y añadir a la base de datos\n        auth.createUserWithEmailAndPassword(correo, contraseña)\n        .then((u) => {\n            \n            var db = firestore;\n\n\n            user.vehiculos = [car];\n            \n            db.collection('usuariosRgistrados').doc(auth.currentUser.uid).set(user)\n                .then(() => {\n                    console.log(\"Todo correcto\")\n                    \n                    history.push(\"/\");\n                }).catch((e) => {\n                console.log(\"hubo un error: \", e)\n            })\n            \n        })\n        .catch((error) => {\n            var errorCode = error.code;\n            console.log(errorCode);\n            var errorMessage = error.message;\n            console.log(errorMessage);\n        });\n    }\n\n    \n    //HTML \nreturn( \n    <>\n        <h2>Sign Up Form</h2>\n        { error ? <p>Todos los campos deben estar rellenos</p> : null }\n        <form\n            onSubmit={registrar}\n        >\n            <label>Nombre: </label>\n            <input\n                type=\"text\"\n                name=\"nombre\"\n                onChange={actualizarState}\n            />\n            <label>Apellido: </label>\n            <input\n                type=\"text\"\n                name=\"apellido\"\n                onChange={actualizarState}\n            />\n            <label>DNI: </label>\n            <input\n                type=\"text\"\n                name=\"dni\"\n                onChange={actualizarState}\n            />\n            <label>Correo: </label>\n            <input\n                type=\"text\"\n                name=\"correo\"\n                onChange={actualizarState}\n            />\n            <label>contraseña: </label>\n            <input\n                type=\"text\"\n                name=\"contraseña\"\n                onChange={actualizarState}\n            />\n            <label>Nacimiento: </label>\n            <input\n                type=\"date\"\n                name=\"nacimiento\"\n                onChange={actualizarState}\n            />\n\n            <label>Telefono: </label>\n            <input\n                type=\"date\"\n                name=\"telefono\"\n                onChange={actualizarState}\n            />\n            <label>Fecha Carnet: </label>\n            <input\n                type=\"date\"\n                name=\"fechaCarnet\"\n                onChange={actualizarState}\n            />\n            <label>Marca: </label>\n            <input\n                type=\"text\"\n                name=\"marca\"\n                onChange={actualizarState}\n            />\n\n            <label>Submodel: </label>\n            <input\n                type=\"text\"\n                name=\"modelo\"\n                onChange={actualizarState}\n            />\n            <label>Matricula: </label>\n            <input\n                type=\"text\"\n                name=\"matricula\"\n                onChange={actualizarState}\n            />\n            <button\n                type=\"submit\"\n            >Registrarse</button>\n        </form>\n    </>\n);\n}\nexport default SignUp ;","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/SesionPage.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/UpdateProfile.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/NewClaim.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/Helper.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Paypal.js",["112"],"import React, { useState }  from 'react';\nimport { auth, firestore } from '../firebaseConfig';\n\nconst Paypal = ({cotizacion}) => {\n    \n   \n    //state para los campos del formulario\n    const [data, setData] = useState({\n        correo : '',\n        contraseña : '',\n    });\n\n    console.log(\"fecha: \"+new Date().getTime());\n    \n    const pagoSeguro = {\n        precio: cotizacion,\n        fecha: new Date().getTime().toString(),\n    }\n        \n    const {correo,contraseña} = data;\n    // estado para validaciones\n    const [error, actualizarError] = useState(false);\n\n    // actualizar campos del formulario\n    const actualizarState = e => {\n        setData({\n            ...data,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const pagar = e => {\n        e.preventDefault();\n\n        if(correo.trim() === '' || contraseña.trim() === '' ){\n            actualizarError(true);\n            return;\n        }\n        \n        actualizarError(false);\n        if(auth.currentUser.uid != null ){\n            firestore.collection('usuariosRgistrados').doc(auth.currentUser.uid).update({\n                \"pagos\": [pagoSeguro]\n            }).then(() => {\n                console.info('se ha actualizado el pago');\n                \n              }).catch((e) => {\n                console.error('Mal', e);\n                \n              })\n        }else{\n            console.log('no hay usuario ');\n        }\n        \n    }\n\n    return( \n    <>\n    <h1>Pagar con Paypal</h1>\n    <form\n        onSubmit={pagar}\n    >\n        <label>Correo</label>\n        <input\n            type=\"text\"\n            name=\"correo\"\n            value={correo}\n            onChange={actualizarState}\n        ></input>\n\n        <label>Contraseña</label>\n        <input\n            type=\"text\"\n            name=\"contraseña\"\n            value={contraseña}\n            onChange={actualizarState}\n        ></input>\n        <button type=\"submit\">Pagar</button>\n    </form>\n    </>\n)};\nexport default Paypal ;","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/NewIncidence.js",["113"],"import React, { Fragment, useState } from \"react\";\nimport {useHistory } from \"react-router-dom\";\nimport { auth, firestore } from \"../firebaseConfig\";\nimport styled from \"@emotion/styled\";\n\nconst Contenedor = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  align-items: center;\n  background-color: #ff5733;\n  width: 100%;\n`;\nconst Label = styled.label`\n  flex: 0 0 100px;\n  width: 100%;\n`;\nconst Boton = styled.button`\n  background-color: #00838f;\n  font-size: 10px;\n  width: 50%;\n  padding: 1rem;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  border: none;\n  &:hover {\n    background-color: #26c6da;\n    cursor: pointer;\n  }\n  margin-top: 1rem;\n`;\n\nconst Error = styled.div`\n  background-color: red;\n  color: white;\n  padding: 0.5rem;\n  width: 47.5%;\n  text-align: center;\n  margin-top: 1rem;\n`;\n\nconst NewIncidence = () => {\n  //para rediccionar\n  //Se ha cambiado\n  let history = useHistory();\n\n  const [datos, guardarDatos] = useState({\n    issue: \"pinchazo\",\n    dateIssue: \"1-10-2020\",\n    incidenceContext: \"la rueda a la caca\",\n  });\n\n  const [error, guardarError] = useState(false);\n  const { issue, dateIssue, incidenceContext } = datos;\n\n  const obtenerDatos = (e) => {\n    guardarDatos({\n      ...datos,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  console.log(auth.currentUser.uid);\n\n  const enviarIncidencia = (e) => {\n    e.preventDefault();\n\n    if (\n      issue.trim() === \"\" ||\n      dateIssue.trim() === \"\" ||\n      incidenceContext.trim() === \"\"\n    ) {\n      guardarError(true);\n      return;\n    }\n\n    //Codigo BD\n    if (auth.currentUser.uid != null) {\n      console.log(\"entra en el if \" + auth.currentUser.uid);\n      var userUID = auth.currentUser.uid;\n      firestore\n        .collection(\"usuariosRgistrados\")\n        .doc(userUID)\n        .update({\n          //apellido: 'pepito'\n          //incidencias: firebase.firestore.FieldValue.arrayUnion(\"greater_virginia\")\n          incidencias: [datos],\n        })\n        .then(() => {\n          console.info(\"todo actualizado\");\n        })\n        .catch((e) => {\n          console.error(\"Mal\", e);\n        });\n    } else {\n      console.log(\"No hay nadie\" + auth.currentUser.uid);\n    }\n    guardarError(false);\n    history.push(\"/Incidences\");\n  };\n\n  //    HTML\n  return (\n    <Fragment>\n      <form onSubmit={enviarIncidencia}>\n        <h2> Incidencia</h2>\n        <Contenedor>\n          <h3>Asunto:&nbsp;</h3>\n          <input\n            type=\"text\"\n            name=\"issue\"\n            value={issue}\n            onChange={obtenerDatos}\n          />\n        </Contenedor>\n        <br></br>\n        <Contenedor>\n          <h3>Fecha de incidencia:&nbsp;</h3>\n          <input\n            type=\"text\"\n            name=\"dateIssue\"\n            value={dateIssue}\n            onChange={obtenerDatos}\n          />\n        </Contenedor>\n        <br></br>\n        <Contenedor>\n          <h3>Mensaje:&nbsp;</h3>\n          <input\n            type=\"text\"\n            name=\"incidenceContext\"\n            value={incidenceContext}\n            onChange={obtenerDatos}\n          />\n        </Contenedor>\n        <br></br>\n        {error ? <Error>Debes rellenar todos los campos</Error> : null}\n        <Boton type=\"submit\">Enviar</Boton>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NewIncidence;\n","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/App.js",["114","115","116","117","118","119"],"\n// const Contenedor = styled.div`\n//   max-width: 600px;\n//   margin: 0 auto;\n// `;\nimport { useState, Fragment } from 'react';\nimport React from 'react'\nimport { auth } from './firebaseConfig';\nimport SignUp from './componentes/SignUp';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PagePrincipal from './componentes/PagePrincipal';\nimport PriceEstimate from './componentes/PriceEstimate';\nimport ContratarSeguro from './componentes/ContratarSeguro';\nimport DeleteAccount from './componentes/DeleteAccount';\n//import styled from \"@emotion/styled\";\nimport LogIn from './componentes/LogIn';\nimport SesionPage from \"./componentes/SesionPage\";\nimport Claims from './componentes/Claims';\nimport NewClaim from './componentes/NewClaim';\nimport Incidences from './componentes/Incidences';\nimport NewIncidence from './componentes/NewIncidence';\nimport UpdateProfile from './componentes/UpdateProfile';\nimport Extras from './componentes/Extras';\n\nfunction App() {\n  /**\n   * Explica el hook de useState, la inicializacion y que se pueden usar varios estados en el componente,\n   * que es mejor que cada componente controle susestado y no un estado global.\n   *\n   * Explica tambien la destructuracion de objetos en Javascript o Typescript (obtener datos desde un array,\n   * porque al final el useState nos devuelve un array de 2 posiciones, primero con el estado y el metodo\n   * para actualizarse)\n   */\n  const [user, setUser] = useState([]);\n  const [isSignIn, setSignIn] = useState(false);\n\n  function login() {\n    /**\n     * Explica aqui que importas el auth y lo configuras en firebaseConfig.js, y el then es por lo de las promesas\n     * que es una funciona asincrona. Y cuando se cumple satisfactoriamente actualizas el estado. De esta\n     * forma se actualiza la vista.\n     */\n    auth\n      .signInWithEmailAndPassword(\"pepe@gmail.com\", \"elpepe\")\n      .then((operation) => {\n        setSignIn(true);\n        setUser(operation.user);\n        console.log(operation.user);\n      });\n  }\n\n  function logout() {\n    auth.signOut();\n    setUser([]);\n    setSignIn(false);\n  }\n\n  /**\n   * Aqui que solo pueden devolver un componente, si no quieren usar un div, pues React.Fragment.\n   * El onClick y que para hacer un if tiene que ser con el ternario.\n   */\n  return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={PagePrincipal}/>\n          <Route exact path=\"/signUp\" component={SignUp}/>\n          <Route exact path=\"/logIn\" component={LogIn}/>\n          <Route exact path=\"/sesion\" component={SesionPage}/>\n          <Route exact path=\"/claims\" component={Claims}/>\n          <Route exact path=\"/newClaim\" component={NewClaim}/>\n          <Route exact path=\"/priceEstimate\" component={PriceEstimate}/>\n          <Route exact path=\"/contratarSeguro\" component={ContratarSeguro}/>\n          <Route exact path=\"/deleteAccount\" component={DeleteAccount}/>\n          <Route exact path=\"/logIn\" component={LogIn} />\n          <Route exact path=\"/actualizarPerfil\" component={UpdateProfile}/>\n          <Route exact path=\"/Incidences\" component={Incidences}/>\n          <Route exact path=\"/NewIncidence\" component={NewIncidence}/>\n          <Route exact path=\"/extras\" component={Extras}/>\n        \n          {/* <Route exact path=\"/login\" component={Login}/> */}\n        </Switch>\n      </Router>\n      // {/* <SignIn/> */}\n      // {/* { isSignIn ? \n      // <React.Fragment>\n      //   <button onClick={logout}>Cerrar sesión</button> \n      //   <h2>Bienvenido a la aplicacion: {user.email}</h2>\n      // </React.Fragment>\n      // : \n      // <Fragment>\n      //     <button onClick={login}>Iniciar sesión</button>\n      //     <Link to={'/signIn'}>Crear cuenta</Link>\n      // </Fragment>\n        \n      // }       */}\n\n  );\n}\n\nexport default App;\n","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/ContratarSeguro.js",["120","121"],"import React , { useState } from 'react';\nimport PayTarjet from './PayTarjet'\nimport Paypal from './Paypal'\n\nconst ContratarSeguro = () => {\n\n    //comprobar que hay un usuario, si no lo hay ir a registrarse o loguearse\n\n    //si esta registrado entonces llamar al componente de pago\n\n    //luego guardar seguro en la base de datos del usuario\n\n    //luego redireccionar a la pagina principal \n\n\n\n    // state para los campos del formulario\n    const [data, setData] = useState({\n      tipo : 'visa',\n    });\n\n    const {tipo} = data\n    const [error, actualizarError] = useState(false);\n\n    // actualizar campos del formulario\n    const actualizarState = e => {\n        setData({\n            ...data,\n            [e.target.name] : e.target.value\n        })\n    }\n\n\n    return( \n        <>\n            <h1>Contratar seguro: Forma de pago</h1>\n\n            <div>\n                <label>Pagar con tarjeta </label>\n                <input\n                    type=\"radio\"\n                    name=\"tipo\"\n                    value=\"visa\"\n                    checked={tipo === \"visa\"}\n                    onChange={actualizarState}\n                /> \n                Visa\n\n                <input\n                    type=\"radio\"\n                    name=\"tipo\"\n                    value=\"mastercard\"\n                    checked={tipo === \"mastercard\"}\n                    onChange={actualizarState}\n                />\n                Mastercard\n            </div>\n\n            <div>\n                <label>Pagar con paypal</label>\n                <input\n                    type=\"radio\"\n                    name=\"tipo\"\n                    value=\"paypal\"\n                    checked={tipo === \"paypal\"}\n                    onChange={actualizarState}\n                /> \n                Paypal\n            </div>\n\n            {tipo === 'visa' || tipo === 'mastercard' ? <PayTarjet /> : <Paypal />}\n\n        </>\n    )\n};\nexport default ContratarSeguro ;","/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/Resultado.js",[],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/LogIn.js",["122","123","124"],"/Users/vivianabenitez/Desktop/ProyectoGS1/GS1-Final-Project/src/componentes/DeleteAccount.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":41,"column":12,"nodeType":"131","messageId":"132","endLine":41,"endColumn":17},{"ruleId":"125","replacedBy":"133"},{"ruleId":"127","replacedBy":"134"},{"ruleId":"125","replacedBy":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"129","severity":1,"message":"137","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":16},{"ruleId":"129","severity":1,"message":"138","line":13,"column":9,"nodeType":"131","messageId":"132","endLine":13,"endColumn":13},{"ruleId":"125","replacedBy":"139"},{"ruleId":"127","replacedBy":"140"},{"ruleId":"129","severity":1,"message":"130","line":21,"column":12,"nodeType":"131","messageId":"132","endLine":21,"endColumn":17},{"ruleId":"129","severity":1,"message":"137","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"129","severity":1,"message":"141","line":5,"column":7,"nodeType":"131","messageId":"132","endLine":5,"endColumn":9},{"ruleId":"129","severity":1,"message":"130","line":22,"column":12,"nodeType":"131","messageId":"132","endLine":22,"endColumn":17},{"ruleId":"129","severity":1,"message":"142","line":13,"column":7,"nodeType":"131","messageId":"132","endLine":13,"endColumn":12},{"ruleId":"129","severity":1,"message":"143","line":6,"column":20,"nodeType":"131","messageId":"132","endLine":6,"endColumn":28},{"ruleId":"129","severity":1,"message":"144","line":10,"column":50,"nodeType":"131","messageId":"132","endLine":10,"endColumn":54},{"ruleId":"129","severity":1,"message":"145","line":34,"column":10,"nodeType":"131","messageId":"132","endLine":34,"endColumn":14},{"ruleId":"129","severity":1,"message":"146","line":35,"column":10,"nodeType":"131","messageId":"132","endLine":35,"endColumn":18},{"ruleId":"129","severity":1,"message":"147","line":37,"column":12,"nodeType":"131","messageId":"132","endLine":37,"endColumn":17},{"ruleId":"129","severity":1,"message":"148","line":52,"column":12,"nodeType":"131","messageId":"132","endLine":52,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":23,"column":12,"nodeType":"131","messageId":"132","endLine":23,"endColumn":17},{"ruleId":"129","severity":1,"message":"149","line":23,"column":19,"nodeType":"131","messageId":"132","endLine":23,"endColumn":34},{"ruleId":"129","severity":1,"message":"150","line":81,"column":13,"nodeType":"131","messageId":"132","endLine":81,"endColumn":22},{"ruleId":"129","severity":1,"message":"151","line":82,"column":13,"nodeType":"131","messageId":"132","endLine":82,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":116,"column":18,"nodeType":"154","endLine":116,"endColumn":21},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["155"],["156"],["155"],["156"],"'Router' is defined but never used.","'list' is assigned a value but never used.",["155"],["156"],"'db' is assigned a value but never used.","'Label' is assigned a value but never used.","'Fragment' is defined but never used.","'Link' is defined but never used.","'user' is assigned a value but never used.","'isSignIn' is assigned a value but never used.","'login' is defined but never used.","'logout' is defined but never used.","'actualizarError' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]